[versions]
jooq = "3.19.8"
flyway = "10.12.0"
rider = "1.42.0"

[libraries]
# Spring Boot
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter" }
spring-boot-starter-jdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }

# Springdoc-openapi
springdoc-openapi-starter-webmvc-api = { module = "org.springdoc:springdoc-openapi-starter-webmvc-api", version = "2.5.0" }

# Jackson
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }

# jackson-databind-nullable
jackson-databind-nullable = { module = "org.openapitools:jackson-databind-nullable", version = "0.2.6" }

# jOOQ
jooq = { module = "org.jooq:jooq", version.ref = "jooq" }

# Flyway
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-database-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }

# PostgreSQL JDBC Driver
postgresql = { module = "org.postgresql:postgresql", version = "42.7.3" }

# JUnit
junit-bom = { module = "org.junit:junit-bom", version = "5.10.2" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }

# Apache Commons CSV
commons-csv = { module = "org.apache.commons:commons-csv", version = "1.11.0" }

# kotlin-result
kotlin-result = { module = "com.michael-bull.kotlin-result:kotlin-result", version = "2.0.0" }

# Testcontainers
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version = "1.19.8" }
testcontainers = { module = "org.testcontainers:testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }

# Database Rider
rider-core = { module = "com.github.database-rider:rider-core", version.ref = "rider" }
rider-junit5 = { module = "com.github.database-rider:rider-junit5", version.ref = "rider" }

[plugins]
# Spring
spring = { id = "org.jetbrains.kotlin.plugin.spring", version = "1.9.22" }
springframework-boot = { id = "org.springframework.boot", version = "3.2.5" }
spring-dependency-management = { id = "io.spring.dependency-management", version = "1.1.3" }

# jOOQ
jooq-codegen-gradle = { id = "org.jooq.jooq-codegen-gradle", version.ref = "jooq" }

# Flyway
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }

# gradle-docker-compose-plugin
docker-compose = { id = "com.avast.gradle.docker-compose", version = "0.17.6" }
